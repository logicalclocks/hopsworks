<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~
 ~ This file is part of Hopsworks
 ~ Copyright (C) 2020, Logical Clocks AB. All rights reserved
 ~
 ~ Hopsworks is free software: you can redistribute it and/or modify it under the terms of
 ~ the GNU Affero General Public License as published by the Free Software Foundation,
 ~ either version 3 of the License, or (at your option) any later version.
 ~
 ~ Hopsworks is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 ~ PURPOSE.  See the GNU Affero General Public License for more details.
 ~
 ~ You should have received a copy of the GNU Affero General Public License along with this program.
 ~ If not, see <https://www.gnu.org/licenses/>.
 ~
 -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions">
<f:view contentType="text/html">
    <h:head>
        <title><ui:insert name="title">Hopsworks</ui:insert></title>
        <link rel="icon" type="image/png" href="#{resource['images/hopsworks-logo/HopsIconGreen.png']}"/>
        <link rel="stylesheet" type="text/css" href="#{resource['/css/main.css']}"/>
        <link rel="stylesheet" type="text/css" href="#{resource['/css/theme.css']}"/>
        <meta http-equiv="refresh"
              content="#{facesContext.externalContext.sessionMaxInactiveInterval};url=#{request.contextPath}/index.xhtml"/>
        <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet"/>
    </h:head>
    <h:body>
        <ui:insert name="titleBar">
            <ui:include src="/security/protected/admin/admintitleBar.xhtml"/>
        </ui:insert>
        <div align="center" style="width: 600px; margin: 150px auto;">
            <p:growl id="growl" life="3000" for="msg" showDetail="true" autoUpdate="false"/>
            <h:form id="register-form" style="margin-bottom: 20px;">
                <p:panel id="register" header="Register a user" toggleable="false" style="margin-bottom:20px">
                    <h:panelGrid columns="3" cellpadding="5" style="margin-right: auto">

                        <h:outputLabel for="accountType" value="Account Type: *" rendered="#{register.remoteAuthEnabled}"/>
                        <p:selectOneMenu id="accountType"
                                         value="#{register.accountType}"
                                         editable="false" rendered="#{register.remoteAuthEnabled}">
                            <f:selectItems value="#{register.accountTypes}"/>
                            <f:ajax event="change" render="@form"/>
                        </p:selectOneMenu>
                        <p:message for="accountType" rendered="#{register.remoteAuthEnabled}"/>

                        <h:outputText for="uuid" value="UUID: *" rendered="#{register.accountType == 1}"/>
                        <p:inputText id="uuid" placeholder="uuid" value="#{register.uuid}"
                                     required="true" requiredMessage="UUID is required." rendered="#{register.accountType == 1}"/>
                        <p:message for="uuid"  rendered="#{register.accountType == 1}"/>

                        <h:outputText for="email" value="#{register.accountType == 0? 'Email: *' : 'Email: '}"/>
                        <p:inputText id="email" placeholder="email" value="#{register.email}"
                                     required="#{register.accountType == 0}"
                                     requiredMessage="Email is required." validatorMessage="Not a valid email.">
                            <f:validateRegex pattern="([\w\.-]*[a-zA-Z0-9_]@[\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]*[a-zA-Z])?" />
                        </p:inputText>
                        <p:message for="email" />

                        <h:outputText for="firstName" value="#{register.accountType == 0? 'First name: *' : 'First name: '}"/>
                        <p:inputText id="firstName" placeholder="first name" value="#{register.firstName}"
                                     required="#{register.accountType == 0}" requiredMessage="First name is required."/>
                        <p:message for="firstName" />

                        <h:outputText for="lastName" value="#{register.accountType == 0? 'Last name: *' : 'Last name: '}"/>
                        <p:inputText id="lastName" placeholder="last name" value="#{register.lastName}"
                                     required="#{register.accountType == 0}" requiredMessage="Last name is required."/>
                        <p:message for="lastName" />

                        <h:outputText for="phone" value="Phone: "/>
                        <p:inputText id="phone" placeholder="phone" value="#{register.phone}"/>
                        <p:message for="phone" />

                        <h:outputLabel for="addRole" value="Role: *"/>
                        <p:selectOneMenu id="addRole"
                                         value="#{register.role}"
                                         editable="false">
                            <f:selectItems value="#{register.roles}" />
                        </p:selectOneMenu>
                        <p:message for="addRole" />

                        <h:outputLabel for="statChoose" value="Status: *"/>
                        <p:selectOneMenu id="statChoose"
                                         value="#{register.status}"
                                         editable="false">
                            <f:selectItems value="#{register.availableStatus}"/>
                        </p:selectOneMenu>
                        <p:message for="statChoose" />

                        <h:outputText for="remoteType" value="Remote type: *" rendered="#{register.accountType == 1}"/>
                        <p:selectOneMenu id="remoteType"
                                         value="#{register.remoteUserType}"
                                         editable="false" rendered="#{register.accountType == 1}">
                            <f:selectItems value="#{register.remoteUserTypes}"/>
                        </p:selectOneMenu>
                        <p:message for="remoteType" rendered="#{register.accountType == 1}"/>

                        <h:outputLabel for="maxNumProjs" value="Number of projects: *"/>
                        <p:spinner id="maxNumProjs" value="#{register.maxNumProjects}"
                                   size="2" min="0"/>
                        <p:message for="maxNumProjs" />
                    </h:panelGrid>
                    <p:commandButton value="Register" update="register-form growl :register-form:dialog"
                                     icon="ui-icon-check" action="#{register.save}" rendered="#{register.accountType == 0}"/>
                    <p:commandButton value="Register" update="register-form growl" icon="ui-icon-check"
                                     action="#{register.save}" rendered="#{register.accountType == 1}"/>
                </p:panel>
                <p:dialog id="dialog" header="New password" widgetVar="dlg1" minHeight="40" resizable="false">
                    <h:outputText value="Password: "/>
                    <p:inputText id="txtCopy" value="#{register.password}" readonly="true" style="font-weight: bolder;"/>
                    <p:commandButton id="btnCopy" value="Copy" icon="ui-icon-copy"/>
                    <pe:clipboard id="clipCopy" trigger="btnCopy" action="copy" target="txtCopy">
                        <p:ajax event="success" listener="#{register.successListener}" />
                        <p:ajax event="error" listener="#{register.errorListener}" />
                    </pe:clipboard>
                </p:dialog>
            </h:form>
        </div>
    </h:body>
</f:view>
</html>