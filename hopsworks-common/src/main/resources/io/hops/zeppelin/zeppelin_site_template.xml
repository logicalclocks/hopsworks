<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  ~ Changes to this file committed after and not including commit-id: ccc0d2c5f9a5ac661e60e6eaf138de7889928b8b
  ~ are released under the following license:
  ~
  ~ This file is part of Hopsworks
  ~ Copyright (C) 2018, Logical Clocks AB. All rights reserved
  ~
  ~ Hopsworks is free software: you can redistribute it and/or modify it under the terms of
  ~ the GNU Affero General Public License as published by the Free Software Foundation,
  ~ either version 3 of the License, or (at your option) any later version.
  ~
  ~ Hopsworks is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  ~ PURPOSE.  See the GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License along with this program.
  ~ If not, see <https://www.gnu.org/licenses/>.
  ~
  ~ Changes to this file committed before and including commit-id: ccc0d2c5f9a5ac661e60e6eaf138de7889928b8b
  ~ are released under the following license:
  ~
  ~ Copyright (C) 2013 - 2018, Logical Clocks AB and RISE SICS AB. All rights reserved
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this
  ~ software and associated documentation files (the "Software"), to deal in the Software
  ~ without restriction, including without limitation the rights to use, copy, modify, merge,
  ~ publish, distribute, sublicense, and/or sell copies of the Software, and to permit
  ~ persons to whom the Software is furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all copies or
  ~ substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  OR IMPLIED, INCLUDING
  ~ BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  ~ NONINFRINGEMENT. IN NO EVENT SHALL  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  ~ DAMAGES OR  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  -->

<configuration>

<property>
  <name>zeppelin.server.addr</name>
  <value>0.0.0.0</value>
  <description>Server address</description>
</property>

<property>
  <name>zeppelin.server.port</name>
  <value>8080</value>
  <description>Server port.</description>
</property>

<property>
  <name>zeppelin.server.context.path</name>
  <value>/</value>
  <description>Context Path of the Web Application</description>
</property>

<property>
  <name>zeppelin.war.tempdir</name>
  <value>webapps</value>
  <description>Location of jetty temporary directory</description>
</property>

<property>
  <name>zeppelin.home</name>
  <value>%%zeppelin_home%%</value>
  <description>path for zeppelin home</description>
</property>

<property>
  <name>zeppelin.conf.dir</name>
  <value>%%zeppelin_home_dir%%/conf</value>
  <description>path for config directory</description>
</property>


<property>
  <name>zeppelin.notebook.dir</name>
  <value>%%zeppelin_notebook_dir%%/notebook</value>
  <description>path or URI for notebook persist</description>
</property>

<property>
  <name>zeppelin.notebook.homescreen</name>
  <value></value>
  <description>id of notebook to be displayed in homescreen. ex) 2A94M5J1Z Empty value displays default home screen</description>
</property>

<property>
  <name>zeppelin.notebook.homescreen.hide</name>
  <value>false</value>
  <description>hide homescreen notebook from list when this value set to true</description>
</property>


<!-- If used S3 to storage the notebooks, it is necessary the following folder structure bucketname/username/notebook/ -->
<!--
<property>
  <name>zeppelin.notebook.s3.user</name>
  <value>user</value>
  <description>user name for s3 folder structure</description>
</property>

<property>
  <name>zeppelin.notebook.s3.bucket</name>
  <value>zeppelin</value>
  <description>bucket name for notebook storage</description>
</property>

  <property>
    <name>zeppelin.notebook.storage</name>
    <value>org.apache.zeppelin.notebook.repo.S3NotebookRepo</value>
    <description>notebook persistence layer implementation</description>
  </property>
  -->

  <!-- For versioning your local norebook storage using Git repository
  <property>
    <name>zeppelin.notebook.storage</name>
    <value>org.apache.zeppelin.notebook.repo.GitNotebookRepo</value>
    <description>notebook persistence layer implementation</description>
  </property>
  -->

  <property>
    <name>zeppelin.notebook.storage</name>
    <value>io.hops.hopsworks.api.zeppelin.notebook.repo.HDFSNotebookRepo</value>
    <description>notebook persistence layer implementation</description>
  </property>

  <property>
    <name>zeppelin.interpreter.dir</name>
    <value>%%zeppelin_home_dir%%/interpreter</value>
    <description>Interpreter implementation base directory</description>
  </property>

  <property>
    <name>zeppelin.interpreter.localRepo</name>
    <value>%%zeppelin_home_dir%%/local-repo</value>
    <description>Local repository for interpreter's additional dependency loading</description>
  </property>
  
  <property>
    <name>zeppelin.interpreter.dep.mvnRepo</name>
    <value>http://repo1.maven.org/maven2/</value>
    <description>Remote principal repository for interpreter's additional dependency loading</description>
  </property>

  <property>
    <name>zeppelin.dep.localrepo</name>
    <value>%%zeppelin_home_dir%%/local-repo</value>
    <description>Local repository for dependency loader</description>
  </property>

  <property>
    <name>zeppelin.helium.npm.registry</name>
    <value>http://registry.npmjs.org/</value>
    <description>Remote Npm registry for Helium dependency loader</description>
  </property>

  <property>
    <name>zeppelin.interpreter.remoterunner</name>
    <value>%%zeppelin_home_dir%%/bin/interpreter.sh</value>
    <description>Interpreter implementation base directory</description>
  </property>

  <property>
    <name>zeppelin.interpreters</name>
    <value>%%zeppelin_interpreters%%</value>
    <description>Comma separated interpreter configurations. First interpreter become a default</description>
  </property>

  <property>
    <name>zeppelin.interpreter.group.order</name>
    <value>livy,spark,md,angular,flink,python</value>
    <description></description>
  </property>

  <property>
    <name>zeppelin.interpreter.connect.timeout</name>
    <value>60000</value>
    <description>Interpreter process connect timeout in msec.</description>
  </property>
  
  <property>
    <name>zeppelin.interpreter.output.limit</name>
    <value>102400</value>
    <description>Output message from interpreter exceeding the limit will be truncated</description>
  </property>


  <property>
    <name>zeppelin.ssl</name>
    <value>false</value>
    <description>Should SSL be used by the servers?</description>
  </property>

  <property>
    <name>zeppelin.ssl.client.auth</name>
    <value>false</value>
    <description>Should client authentication be used for SSL connections?</description>
  </property>

  <property>
    <name>zeppelin.ssl.keystore.path</name>
    <value>keystore</value>
    <description>Path to keystore relative to Zeppelin configuration directory</description>
  </property>

  <property>
    <name>zeppelin.ssl.keystore.type</name>
    <value>JKS</value>
    <description>The format of the given keystore (e.g. JKS or PKCS12)</description>
  </property>

  <property>
    <name>zeppelin.ssl.keystore.password</name>
    <value>changeit</value>
    <description>Keystore password. Can be obfuscated by the Jetty Password tool</description>
  </property>

  <property>
    <name>zeppelin.ssl.truststore.path</name>
    <value>truststore</value>
    <description>Path to truststore relative to Zeppelin configuration directory. Defaults to the keystore path</description>
  </property>

  <property>
    <name>zeppelin.ssl.truststore.type</name>
    <value>JKS</value>
    <description>The format of the given truststore (e.g. JKS or PKCS12). Defaults to the same type as the keystore type</description>
  </property>

  <!--
  <property>
    <name>zeppelin.ssl.truststore.password</name>
    <value>change me</value>
    <description>Truststore password. Can be obfuscated by the Jetty Password tool. Defaults to the keystore password</description>
  </property>
  -->

  <property>
    <name>zeppelin.server.allowed.origins</name>
    <value>*</value>
    <description>Allowed sources for REST and WebSocket requests (i.e. http://onehost:8080,http://otherhost.com). If you leave * you are vulnerable to https://issues.apache.org/jira/browse/ZEPPELIN-173</description>
  </property>

  <property>
    <name>zeppelin.anonymous.allowed</name>
    <value>true</value>
    <description>Anonymous user allowed by default</description>
  </property>

  <property>
    <name>zeppelin.websocket.max.text.message.size</name>
    <value>1024000</value>
    <description>Size in characters of the maximum text message to be received by websocket. Defaults to 1024000</description>
  </property>
  
  <property>
    <name>zeppelin.server.default.dir.allowed</name>
    <value>false</value>
    <description>Enable directory listings on server.</description>
  </property>

  <property>
    <name>zeppelin.livy.url</name>
    <value>%%livy_url%%</value>
    <description>Endpoint for the livy server</description>
  </property>

  <property>
    <name>zeppelin.livy.master</name>
    <value>%%livy_master%%</value>
    <description>Spark master for Livy (yarn, yarn-client, spark://localhost:8908)</description>
  </property>
</configuration>
