<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Changes to this file committed after and not including commit-id: ccc0d2c5f9a5ac661e60e6eaf138de7889928b8b
  ~ are released under the following license:
  ~
  ~ This file is part of Hopsworks
  ~ Copyright (C) 2018, Logical Clocks AB. All rights reserved
  ~
  ~ Hopsworks is free software: you can redistribute it and/or modify it under the terms of
  ~ the GNU Affero General Public License as published by the Free Software Foundation,
  ~ either version 3 of the License, or (at your option) any later version.
  ~
  ~ Hopsworks is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  ~ PURPOSE.  See the GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License along with this program.
  ~ If not, see <https://www.gnu.org/licenses/>.
  ~
  ~ Changes to this file committed before and including commit-id: ccc0d2c5f9a5ac661e60e6eaf138de7889928b8b
  ~ are released under the following license:
  ~
  ~ Copyright (C) 2013 - 2018, Logical Clocks AB and RISE SICS AB. All rights reserved
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this
  ~ software and associated documentation files (the "Software"), to deal in the Software
  ~ without restriction, including without limitation the rights to use, copy, modify, merge,
  ~ publish, distribute, sublicense, and/or sell copies of the Software, and to permit
  ~ persons to whom the Software is furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all copies or
  ~ substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  OR IMPLIED, INCLUDING
  ~ BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  ~ NONINFRINGEMENT. IN NO EVENT SHALL  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  ~ DAMAGES OR  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  -->

<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
  <context-param>
    <param-name>javax.faces.PROJECT_STAGE</param-name>
    <param-value>Development</param-value>
  </context-param>
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- Kibana proxy servlet -->
  <servlet>
    <servlet-name>KibanaProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.kibana.KibanaProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:5601/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>KibanaProxyServlet</servlet-name>
    <url-pattern>/kibana/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>KibanaProxyServlet</servlet-name>
    <url-pattern>/kibana</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>jupyter</servlet-name>
    <servlet-class>com.predic8.membrane.servlet.embedded.MembraneServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:{_port}/hopsworks-api/jupyter</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>true</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>jupyter</servlet-name>
    <url-pattern>/jupyter</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>jupyter</servlet-name>
    <url-pattern>/jupyter/*</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>rstudio</servlet-name>
    <servlet-class>com.predic8.membrane.servlet.embedded.RStudioMembraneServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:{_port}/hopsworks-api/rstudio</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>true</param-value>
    </init-param>
  </servlet>        
  <servlet-mapping>
    <servlet-name>rstudio</servlet-name>
    <url-pattern>/rstudio</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rstudio</servlet-name>
    <url-pattern>/rstudio/*</url-pattern>
  </servlet-mapping>                    
                                                            
    
  <!-- Grafana proxy servlet -->
  <servlet>
    <servlet-name>GrafanaProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.kibana.GrafanaProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:3000/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>GrafanaProxyServlet</servlet-name>
    <url-pattern>/grafana/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>GrafanaProxyServlet</servlet-name>
    <url-pattern>/grafana</url-pattern>
  </servlet-mapping>
  <!-- YARN UI proxy servlet -->
  <servlet>
    <servlet-name>YarnUIProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.admin.YarnUIProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:8088/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>true</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>YarnUIProxyServlet</servlet-name>
    <url-pattern>/yarnui/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>YarnUIProxyServlet</servlet-name>
    <url-pattern>/yarnui</url-pattern>
  </servlet-mapping>
  <!-- HDFS UI proxy servlet -->
  <servlet>
    <servlet-name>HDFSUIProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.admin.HDFSUIProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:50070/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>true</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>HDFSUIProxyServlet</servlet-name>
    <url-pattern>/hdfsui/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>HDFSUIProxyServlet</servlet-name>
    <url-pattern>/hdfsui</url-pattern>
  </servlet-mapping>
  <!-- LLAP monitor proxy servlet -->
  <servlet>
    <servlet-name>LlapMonitorProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.admin.llap.LlapMonitorProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://{host}:15002/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>LlapMonitorProxyServlet</servlet-name>
    <url-pattern>/llapmonitor/*</url-pattern>
  </servlet-mapping>
  <!-- tensorboard proxy servlet -->
  <servlet>
    <servlet-name>TensorBoardProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.tensorflow.TensorBoardProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:80/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>TensorBoardProxyServlet</servlet-name>
    <url-pattern>/tensorboard/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>TensorBoardProxyServlet</servlet-name>
    <url-pattern>/tensorboard</url-pattern>
  </servlet-mapping>

  <!-- Airflow proxy servlet -->
  <servlet>
    <servlet-name>AirflowProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.airflow.AirflowProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:12358/hopsworks-api/airflow</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <init-param>
      <param-name>http.protocol.handle-redirects</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>AirflowProxyServlet</servlet-name>
    <url-pattern>/airflow/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AirflowProxyServlet</servlet-name>
    <url-pattern>/airflow</url-pattern>
  </servlet-mapping>

  <!-- Flink proxy servlet -->
  <servlet>
    <servlet-name>FlinkProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.jobs.FlinkProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:80/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>FlinkProxyServlet</servlet-name>
    <url-pattern>/flinkmaster/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>FlinkProxyServlet</servlet-name>
    <url-pattern>/flinkmaster</url-pattern>
  </servlet-mapping>

  <!-- Flink proxy servlet -->
  <servlet>
    <servlet-name>FlinkHistoryServerProxyServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.jobs.FlinkHistoryServerProxyServlet</servlet-class>
    <init-param>
      <param-name>targetUri</param-name>
      <param-value>http://localhost:29183/</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>FlinkHistoryServerProxyServlet</servlet-name>
    <url-pattern>/flinkhistoryserver/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>FlinkHistoryServerProxyServlet</servlet-name>
    <url-pattern>/flinkhistoryserver</url-pattern>
  </servlet-mapping>


  <!-- Other servlets -->

  <servlet>
    <servlet-name>Jersey2Config</servlet-name>
    <servlet-class>io.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>
    <init-param>
      <param-name>api.version</param-name>
      <param-value>${project.version}</param-value>
    </init-param>
    <init-param>
      <param-name>swagger.api.title</param-name>
      <param-value>Hopsworks api</param-value>
    </init-param>
    <init-param>
      <param-name>swagger.api.basepath</param-name>
      <param-value>/hopsworks-api/api</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet>
    <servlet-name>Bootstrap</servlet-name>
    <servlet-class>io.hops.hopsworks.rest.application.config.Bootstrap</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>AngularFileManagerServlet</servlet-name>
    <servlet-class>io.hops.hopsworks.api.airflow.AngularFileManagerServlet</servlet-class>
    <init-param>
      <param-name>repository.base.path</param-name>
      <param-value>/srv/hops/airflow/dags</param-value>
    </init-param>
    <init-param>
      <param-name>date.format</param-name>
      <param-value>yyyy-MM-dd hh:mm:ss</param-value>
    </init-param>
    <init-param>
      <param-name>enabled.action</param-name>
      <param-value>rename,move,remove,edit,createFolder,changePermissions,compress,extract,copy,upload</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>AngularFileManagerServlet</servlet-name>
    <url-pattern>/filemanager</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AngularFileManagerServlet</servlet-name>
    <url-pattern>/filemanager/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AngularFileManagerServlet</servlet-name>
    <url-pattern>/app/filemanager</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AngularFileManagerServlet</servlet-name>
    <url-pattern>/app/filemanager/*</url-pattern>
  </servlet-mapping>

  <security-role>
    <role-name>HOPS_ADMIN</role-name>
  </security-role>
  <security-role>
    <role-name>HOPS_USER</role-name>
  </security-role>
  <security-role>
    <role-name>CLUSTER_AGENT</role-name>
  </security-role>
  <security-role>
    <role-name>AUDITOR</role-name>
  </security-role>
  <security-role>
    <role-name>AGENT</role-name>
  </security-role>
  <security-constraint>
    <display-name>Metadata SocketConstraint</display-name>
    <web-resource-collection>
      <web-resource-name>MetadataWebSocket</web-resource-name>
      <description>Security constraint for  metadata designer websocket endpoint</description>
      <url-pattern>/wspoint/*</url-pattern>
      <http-method>GET</http-method>
    </web-resource-collection>
    <auth-constraint>
      <description>definition of which roles  may access the quote endpoint</description>
      <role-name>HOPS_ADMIN</role-name>
      <role-name>HOPS_USER</role-name>
    </auth-constraint>
  </security-constraint>
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Viewpoint Secure URLs</web-resource-name>
      <url-pattern>/*</url-pattern>
    </web-resource-collection>
  </security-constraint>
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>cauthRealm</realm-name>
  </login-config>
  <context-param>
    <param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
    <param-value>true</param-value>
  </context-param>
  <session-config>
    <session-timeout>600</session-timeout>
    <cookie-config>
      <name>SESSION</name>
      <path>/</path>
      <http-only>false</http-only>
      <secure>false</secure>
    </cookie-config>
  </session-config>
</web-app>
