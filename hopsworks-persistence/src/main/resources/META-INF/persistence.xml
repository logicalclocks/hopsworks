<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Changes to this file committed after and not including commit-id: ccc0d2c5f9a5ac661e60e6eaf138de7889928b8b
  ~ are released under the following license:
  ~
  ~ This file is part of Hopsworks
  ~ Copyright (C) 2018, Logical Clocks AB. All rights reserved
  ~
  ~ Hopsworks is free software: you can redistribute it and/or modify it under the terms of
  ~ the GNU Affero General Public License as published by the Free Software Foundation,
  ~ either version 3 of the License, or (at your option) any later version.
  ~
  ~ Hopsworks is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  ~ PURPOSE.  See the GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License along with this program.
  ~ If not, see <https://www.gnu.org/licenses/>.
  ~
  ~ Changes to this file committed before and including commit-id: ccc0d2c5f9a5ac661e60e6eaf138de7889928b8b
  ~ are released under the following license:
  ~
  ~ Copyright (C) 2013 - 2018, Logical Clocks AB and RISE SICS AB. All rights reserved
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this
  ~ software and associated documentation files (the "Software"), to deal in the Software
  ~ without restriction, including without limitation the rights to use, copy, modify, merge,
  ~ publish, distribute, sublicense, and/or sell copies of the Software, and to permit
  ~ persons to whom the Software is furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all copies or
  ~ substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  OR IMPLIED, INCLUDING
  ~ BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  ~ NONINFRINGEMENT. IN NO EVENT SHALL  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  ~ DAMAGES OR  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  -->

<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
  <persistence-unit name="kthfsPU" transaction-type="JTA">
    <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
    <jta-data-source>jdbc/hopsworks</jta-data-source>
    <class>io.hops.hopsworks.common.dao.hdfs.HdfsDirectoryWithQuotaFeature</class>
    <class>io.hops.hopsworks.common.dao.hdfs.HdfsLeDescriptors</class>
    <class>io.hops.hopsworks.common.dao.hdfsUser.HdfsGroups</class>
    <class>io.hops.hopsworks.common.dao.hdfsUser.HdfsUsers</class>
    <class>io.hops.hopsworks.common.dao.jobhistory.Execution</class>
    <class>io.hops.hopsworks.common.dao.jobhistory.YarnAppHeuristicResult</class>
    <class>io.hops.hopsworks.common.dao.jobhistory.YarnAppHeuristicResultDetails</class>
    <class>io.hops.hopsworks.common.dao.jobhistory.YarnAppResult</class>
    <class>io.hops.hopsworks.common.dao.jobhistory.YarnApplicationattemptstate</class>
    <class>io.hops.hopsworks.common.dao.jobhistory.YarnApplicationstate</class>
    <class>io.hops.hopsworks.common.dao.jobs.FilesToRemove</class>
    <class>io.hops.hopsworks.common.dao.jobs.quota.YarnPriceMultiplicator</class>
    <class>io.hops.hopsworks.common.dao.jobs.quota.YarnProjectsDailyCost</class>
    <class>io.hops.hopsworks.common.dao.jobs.quota.YarnProjectsQuota</class>
    <class>io.hops.hopsworks.common.dao.util.Variables</class>
    <class>io.hops.hopsworks.common.dao.alert.Alert</class>
    <class>io.hops.hopsworks.common.dao.certificates.UserCerts</class>
    <class>io.hops.hopsworks.common.dao.command.Command</class>
    <class>io.hops.hopsworks.common.dao.dataset.Dataset</class>
    <class>io.hops.hopsworks.common.dao.dataset.DatasetRequest</class>
    <class>io.hops.hopsworks.common.dao.hdfs.inode.Inode</class>
    <class>io.hops.hopsworks.common.dao.hdfs.inode.InodeEncodingStatus</class>
    <class>io.hops.hopsworks.common.dao.hdfs.inode.InodeOps</class>
    <class>io.hops.hopsworks.common.dao.kafka.ProjectTopics</class>
    <class>io.hops.hopsworks.common.dao.kafka.SchemaTopics</class>
    <class>io.hops.hopsworks.common.dao.kafka.SharedTopics</class>
    <class>io.hops.hopsworks.common.dao.kafka.TopicAcls</class>
    <class>io.hops.hopsworks.common.dao.log.meta.MetaLog</class>
    <class>io.hops.hopsworks.common.dao.log.operation.OperationsLog</class>
    <class>io.hops.hopsworks.common.dao.message.Message</class>
    <class>io.hops.hopsworks.common.dao.metadata.Field</class>
    <class>io.hops.hopsworks.common.dao.metadata.FieldPredefinedValue</class>
    <class>io.hops.hopsworks.common.dao.metadata.FieldType</class>
    <class>io.hops.hopsworks.common.dao.metadata.InodeBasicMetadata</class>
    <class>io.hops.hopsworks.common.dao.metadata.MTable</class>
    <class>io.hops.hopsworks.common.dao.metadata.Metadata</class>
    <class>io.hops.hopsworks.common.dao.metadata.RawData</class>
    <class>io.hops.hopsworks.common.dao.metadata.SchemalessMetadata</class>
    <class>io.hops.hopsworks.common.dao.metadata.Template</class>
    <class>io.hops.hopsworks.common.dao.metadata.TupleToFile</class>
    <class>io.hops.hopsworks.common.dao.project.Project</class>
    <class>io.hops.hopsworks.common.dao.project.service.ProjectServices</class>
    <class>io.hops.hopsworks.common.dao.project.team.ProjectTeam</class>
    <class>io.hops.hopsworks.common.dao.user.BbcGroup</class>
    <class>io.hops.hopsworks.common.dao.user.Users</class>
    <class>io.hops.hopsworks.common.dao.user.cluster.ClusterCert</class>
    <class>io.hops.hopsworks.common.dao.user.activity.Activity</class>
    <class>io.hops.hopsworks.common.dao.user.security.Address</class>
    <class>io.hops.hopsworks.common.dao.user.security.Organization</class>
    <class>io.hops.hopsworks.common.dao.user.security.audit.AccountAudit</class>
    <class>io.hops.hopsworks.common.dao.user.security.audit.RolesAudit</class>
    <class>io.hops.hopsworks.common.dao.user.security.audit.Userlogins</class>
    <class>io.hops.hopsworks.common.dao.user.sshkey.AuthorizedSshkeys</class>
    <class>io.hops.hopsworks.common.dao.user.sshkey.SshKeys</class>
    <class>io.hops.hopsworks.common.dao.remote.user.RemoteUser</class>
    <class>io.hops.hopsworks.common.dao.remote.oauth.OauthClient</class>
    <class>io.hops.hopsworks.common.dao.remote.oauth.OauthLoginState</class>
    <class>io.hops.hopsworks.common.dao.python.PythonDep</class>
    <class>io.hops.hopsworks.common.dao.python.AnacondaRepo</class>
    <class>io.hops.hopsworks.common.dao.python.CondaCommands</class>
    <class>io.hops.hopsworks.common.dao.tensorflow.TensorBoard</class>
    <class>io.hops.hopsworks.common.dao.tensorflow.TfLibMapping</class>
    <class>io.hops.hopsworks.common.dao.serving.Serving</class>
    <class>io.hops.hopsworks.common.dao.jupyter.JupyterProject</class>
    <class>io.hops.hopsworks.common.dao.jupyter.JupyterSettings</class>
    <class>io.hops.hopsworks.common.dao.ndb.NdbBackup</class>
    <class>io.hops.hopsworks.common.dao.jobs.description.Jobs</class>
    <class>io.hops.hopsworks.common.dao.dela.certs.ClusterCertificate</class>
    <class>io.hops.hopsworks.common.dao.host.Hosts</class>
    <class>io.hops.hopsworks.common.dao.kagent.HostServices</class>
    <class>io.hops.hopsworks.common.dao.user.security.UserGroup</class>
    <class>io.hops.hopsworks.common.security.dao.RemoteMaterialReferences</class>
    <class>io.hops.hopsworks.common.dao.command.SystemCommand</class>
    <class>io.hops.hopsworks.common.dao.command.SystemCommandArguments</class>
    <class>io.hops.hopsworks.common.dao.project.pia.Pia</class>
    <class>io.hops.hopsworks.common.dao.featurestore.Featurestore</class>
    <class>io.hops.hopsworks.common.dao.featurestore.featuregroup.Featuregroup</class>
    <class>io.hops.hopsworks.common.dao.featurestore.trainingdataset.TrainingDataset</class>
    <class>io.hops.hopsworks.common.dao.featurestore.stats.FeaturestoreStatistic</class>
    <class>io.hops.hopsworks.common.dao.featurestore.dependencies.FeaturestoreDependency</class>
    <class>io.hops.hopsworks.common.dao.featurestore.trainingdataset.feature.TrainingDatasetFeature</class>
    <class>io.hops.hopsworks.common.dao.maggy.MaggyDriver</class>
    <class>io.hops.hopsworks.common.dao.airflow.MaterializedJWT</class>
    <!-- Converters -->
    <class>io.hops.hopsworks.common.dao.user.cluster.RegistrationStatusConverter</class>
    <class>io.hops.hopsworks.common.jobs.configuration.JobConfigurationConverter</class>
    <class>io.hops.hopsworks.common.jupyter.JupyterConfigurationConverter</class>
    <class>io.hops.hopsworks.common.dao.featurestore.stats.FeaturestoreStatisticValueConverter</class>

    <class>io.hops.hopsworks.common.dao.rstudio.RStudioProject</class>
    <class>io.hops.hopsworks.common.dao.rstudio.RStudioSettings</class>


    <class>io.hops.hopsworks.jwt.dao.InvalidJwt</class>
    <class>io.hops.hopsworks.jwt.dao.JwtSigningKey</class>

    <exclude-unlisted-classes>true</exclude-unlisted-classes>
    <shared-cache-mode>NONE</shared-cache-mode>
    <validation-mode>NONE</validation-mode>
    <properties>
      <property name="eclipselink.target-database" value="MYSQL"/>
      <!--      <property name="eclipselink.logging.level" value="FINE"/>
      <property name="eclipselink.logging.level.sql" value="FINE"/>
      <property name="eclipselink.logging.parameters" value="true"/>
      <property name="eclipselink.logging.logger" value="ServerLogger"/>
      -->
    </properties>
  </persistence-unit>

  <persistence-unit name="airflowPU" transaction-type="JTA">
    <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
    <jta-data-source>jdbc/airflow</jta-data-source>

    <class>io.hops.hopsworks.common.dao.airflow.AirflowDag</class>

    <exclude-unlisted-classes>true</exclude-unlisted-classes>
    <shared-cache-mode>NONE</shared-cache-mode>
    <validation-mode>NONE</validation-mode>
    <properties>
      <property name="eclipselink.target-database" value="MYSQL"/>
      <property name="eclipselink.read-only" value="true"/>
      <!--      <property name="eclipselink.logging.level" value="FINE"/>
      <property name="eclipselink.logging.level.sql" value="FINE"/>
      <property name="eclipselink.logging.parameters" value="true"/>
      <property name="eclipselink.logging.logger" value="ServerLogger"/>
      -->
    </properties>
  </persistence-unit>
</persistence>
